{"ast":null,"code":"var _s = $RefreshSig$();\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from '@azure/msal-react';\nimport { loginRequest } from '../authConfig';\nexport const Login = () => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  let activeAccount;\n  if (instance) {\n    activeAccount = instance.getActiveAccount();\n  }\n  const handleLoginPopup = () => {\n    /**\r\n     * When using popup and silent APIs, we recommend setting the redirectUri to a blank page or a page\r\n     * that does not implement MSAL. Keep in mind that all redirect routes must be registered with the application\r\n     * For more information, please follow this link: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/login-user.md#redirecturi-considerations\r\n     */\n    instance.loginPopup({\n      ...loginRequest,\n      redirectUri: '/redirect'\n    }).catch(error => console.log(error));\n  };\n  const handleLoginRedirect = () => {\n    instance.loginRedirect(loginRequest).catch(error => console.log(error));\n  };\n  const handleLogoutPopup = () => {\n    instance.logoutPopup({\n      mainWindowRedirectUri: '/',\n      // redirects the top level app after logout\n      account: instance.getActiveAccount()\n    }).catch(error => console.log(error));\n  };\n  const handleLogoutRedirect = () => {\n    instance.logoutRedirect().catch(error => console.log(error));\n  };\n\n  /**\r\n   * Most applications will need to conditionally render certain components based on whether a user is signed in or not.\r\n   * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will\r\n   * only render their children if a user is authenticated or unauthenticated, respectively.\r\n   */\n};\n_s(Login, \"kNmaupTUyOO55c/HFAYpHUXUX7Y=\", false, function () {\n  return [useMsal];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["AuthenticatedTemplate","UnauthenticatedTemplate","useMsal","loginRequest","Login","_s","instance","activeAccount","getActiveAccount","handleLoginPopup","loginPopup","redirectUri","catch","error","console","log","handleLoginRedirect","loginRedirect","handleLogoutPopup","logoutPopup","mainWindowRedirectUri","account","handleLogoutRedirect","logoutRedirect","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/ProyectoReact/src/components/NavigationBar.jsx"],"sourcesContent":["import { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from '@azure/msal-react';\r\n\r\nimport { loginRequest } from '../authConfig';\r\n\r\nexport const Login = () => {\r\n    const { instance } = useMsal();\r\n\r\n    let activeAccount;\r\n\r\n    if (instance) {\r\n        activeAccount = instance.getActiveAccount();\r\n    }\r\n\r\n    const handleLoginPopup = () => {\r\n        /**\r\n         * When using popup and silent APIs, we recommend setting the redirectUri to a blank page or a page\r\n         * that does not implement MSAL. Keep in mind that all redirect routes must be registered with the application\r\n         * For more information, please follow this link: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/login-user.md#redirecturi-considerations\r\n         */\r\n        instance\r\n            .loginPopup({\r\n                ...loginRequest,\r\n                redirectUri: '/redirect',\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleLoginRedirect = () => {\r\n        instance.loginRedirect(loginRequest).catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleLogoutPopup = () => {\r\n        instance\r\n            .logoutPopup({\r\n                mainWindowRedirectUri: '/', // redirects the top level app after logout\r\n                account: instance.getActiveAccount(),\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleLogoutRedirect = () => {\r\n        instance.logoutRedirect().catch((error) => console.log(error));\r\n    };\r\n\r\n    /**\r\n     * Most applications will need to conditionally render certain components based on whether a user is signed in or not.\r\n     * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will\r\n     * only render their children if a user is authenticated or unauthenticated, respectively.\r\n     */\r\n}"],"mappings":";AAAA,SAASA,qBAAqB,EAAEC,uBAAuB,EAAEC,OAAO,QAAQ,mBAAmB;AAE3F,SAASC,YAAY,QAAQ,eAAe;AAE5C,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAS,CAAC,GAAGJ,OAAO,EAAE;EAE9B,IAAIK,aAAa;EAEjB,IAAID,QAAQ,EAAE;IACVC,aAAa,GAAGD,QAAQ,CAACE,gBAAgB,EAAE;EAC/C;EAEA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;AACR;AACA;AACA;AACA;IACQH,QAAQ,CACHI,UAAU,CAAC;MACR,GAAGP,YAAY;MACfQ,WAAW,EAAE;IACjB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAC9BV,QAAQ,CAACW,aAAa,CAACd,YAAY,CAAC,CAACS,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7E,CAAC;EAED,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC5BZ,QAAQ,CACHa,WAAW,CAAC;MACTC,qBAAqB,EAAE,GAAG;MAAE;MAC5BC,OAAO,EAAEf,QAAQ,CAACE,gBAAgB;IACtC,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IAC/BhB,QAAQ,CAACiB,cAAc,EAAE,CAACX,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAClE,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA,CAAC;AAAAR,EAAA,CA7CYD,KAAK;EAAA,QACOF,OAAO;AAAA;AAAAsB,EAAA,GADnBpB,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}