{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\ProyectoReact\\\\Backend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { PublicClientApplication, EventType } from '@azure/msal-browser';\nimport { msalConfig } from './authConfig';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '.';\n\n/**\r\n * MSAL should be instantiated outside of the component tree to prevent it from being re-instantiated on re-renders.\r\n * For more, visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n// Default to using the first account if no account is active on page load\nif (!msalInstance.getActiveAccount() && msalInstance.getAllAccounts().length > 0) {\n  // Account selection logic is app dependent. Adjust as needed for different use cases.\n  msalInstance.setActiveAccount(msalInstance.getActiveAccount()[0]);\n}\n\n// Listen for sign-in event and set active account\nmsalInstance.addEventCallback(event => {\n  if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\n    const account = event.payload.account;\n    msalInstance.setActiveAccount(account);\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {\n  instance: msalInstance\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","PublicClientApplication","EventType","msalConfig","jsxDEV","_jsxDEV","msalInstance","getActiveAccount","getAllAccounts","length","setActiveAccount","addEventCallback","event","eventType","LOGIN_SUCCESS","payload","account","root","createRoot","document","getElementById","render","instance","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/david/Documents/ProyectoReact/Backend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport { PublicClientApplication, EventType } from '@azure/msal-browser';\r\nimport { msalConfig } from './authConfig';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '.';\r\n\r\n/**\r\n * MSAL should be instantiated outside of the component tree to prevent it from being re-instantiated on re-renders.\r\n * For more, visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\n// Default to using the first account if no account is active on page load\r\nif (!msalInstance.getActiveAccount() && msalInstance.getAllAccounts().length > 0) {\r\n    // Account selection logic is app dependent. Adjust as needed for different use cases.\r\n    msalInstance.setActiveAccount(msalInstance.getActiveAccount()[0]);\r\n}\r\n\r\n// Listen for sign-in event and set active account\r\nmsalInstance.addEventCallback((event) => {\r\n    if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\r\n        const account = event.payload.account;\r\n        msalInstance.setActiveAccount(account);\r\n    }\r\n});\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App instance={msalInstance} />);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,uBAAuB,EAAEC,SAAS,QAAQ,qBAAqB;AACxE,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,sCAAsC;AAC7C,OAAO,GAAG;;AAEV;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,YAAY,GAAG,IAAIL,uBAAuB,CAACE,UAAU,CAAC;;AAE5D;AACA,IAAI,CAACG,YAAY,CAACC,gBAAgB,EAAE,IAAID,YAAY,CAACE,cAAc,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;EAC9E;EACAH,YAAY,CAACI,gBAAgB,CAACJ,YAAY,CAACC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC;AACrE;;AAEA;AACAD,YAAY,CAACK,gBAAgB,CAAEC,KAAK,IAAK;EACrC,IAAIA,KAAK,CAACC,SAAS,KAAKX,SAAS,CAACY,aAAa,IAAIF,KAAK,CAACG,OAAO,CAACC,OAAO,EAAE;IACtE,MAAMA,OAAO,GAAGJ,KAAK,CAACG,OAAO,CAACC,OAAO;IACrCV,YAAY,CAACI,gBAAgB,CAACM,OAAO,CAAC;EAC1C;AACJ,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAGlB,QAAQ,CAACmB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eAAChB,OAAA,CAACL,GAAG;EAACsB,QAAQ,EAAEhB;AAAa;EAAAiB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}