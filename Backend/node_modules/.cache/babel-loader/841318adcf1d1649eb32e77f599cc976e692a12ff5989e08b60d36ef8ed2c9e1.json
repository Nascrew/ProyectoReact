{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escape = void 0;\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nconst escape = function (s) {\n  let {\n    windowsPathsNoEscape = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape ? s.replace(/[?*()[\\]]/g, '[$&]') : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&');\n};\nexports.escape = escape;","map":{"version":3,"names":["escape","s","windowsPathsNoEscape","arguments","length","undefined","replace","exports"],"sources":["C:\\Users\\david\\Documents\\ProyectoReact\\Backend\\node_modules\\express-handlebars\\node_modules\\minimatch\\src\\escape.ts"],"sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n"],"mappings":";;;;;;AACA;;;;;;;;;AASO,MAAMA,MAAM,GAAG,SAAAA,CACpBC,CAAS,EAIP;EAAA,IAHF;IACEC,oBAAoB,GAAG;EAAK,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MACsB,EAAE;EAEtD;EACA;EACA;EACA,OAAOD,oBAAoB,GACvBD,CAAC,CAACK,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,GAC/BL,CAAC,CAACK,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC;AACvC,CAAC;AAZYC,OAAA,CAAAP,MAAM,GAAAA,MAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}