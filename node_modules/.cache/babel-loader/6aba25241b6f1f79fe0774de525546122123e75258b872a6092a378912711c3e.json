{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasMagic = void 0;\nconst minimatch_1 = require(\"minimatch\");\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nconst hasMagic = function (pattern) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern];\n  }\n  for (const p of pattern) {\n    if (new minimatch_1.Minimatch(p, options).hasMagic()) return true;\n  }\n  return false;\n};\nexports.hasMagic = hasMagic;","map":{"version":3,"names":["minimatch_1","require","hasMagic","pattern","options","arguments","length","undefined","Array","isArray","p","Minimatch","exports"],"sources":["C:\\Users\\david\\Documents\\ProyectoReact\\Backend\\node_modules\\express-handlebars\\node_modules\\glob\\src\\has-magic.ts"],"sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {}\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"],"mappings":";;;;;;AAAA,MAAAA,WAAA,GAAAC,OAAA;AAGA;;;;;;;;;;;AAWO,MAAMC,QAAQ,GAAG,SAAAA,CACtBC,OAA0B,EAEf;EAAA,IADXC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuB,EAAE;EAEzB,IAAI,CAACG,KAAK,CAACC,OAAO,CAACN,OAAO,CAAC,EAAE;IAC3BA,OAAO,GAAG,CAACA,OAAO,CAAC;;EAErB,KAAK,MAAMO,CAAC,IAAIP,OAAO,EAAE;IACvB,IAAI,IAAIH,WAAA,CAAAW,SAAS,CAACD,CAAC,EAAEN,OAAO,CAAC,CAACF,QAAQ,EAAE,EAAE,OAAO,IAAI;;EAEvD,OAAO,KAAK;AACd,CAAC;AAXYU,OAAA,CAAAV,QAAQ,GAAAA,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}