{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\nexport const msalConfig = {\n  auth: {\n    clientId: '04a3fb00-a972-438a-83c4-cd6c37afaba7',\n    // Este es el ÚNICO campo obligatorio que debe proporcionar.\n    authority: 'https://login.microsoftonline.com/davidpatarroyo458gmail.onmicrosoft.com',\n    //El valor predeterminado es \"https://login.microsoftonline.com/common\"\n    redirectUri: 'http://localhost:3000',\n    // Apunta a ventana.ubicación.origen. Debe registrar este URI en el portal/registro de aplicaciones de Azure.\n    postLogoutRedirectUri: '/',\n    // Indica la página para navegar después de cerrar sesión.\n    navigateToLoginRequestUrl: false // Si es \"verdadero\", regresará a la ubicación de la solicitud original antes de procesar la respuesta del código de autenticación.\n  },\n\n  cache: {\n    cacheLocation: 'sessionStorage',\n    // Configura la ubicación de la caché. \"sessionStorage\" es más seguro, pero \"localStorage\" le brinda SSO entre pestañas.\n    storeAuthStateInCookie: false //Establezca esto en \"verdadero\" si tiene problemas en IE11 o Edge\n  },\n\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n          case LogLevel.Info:\n            console.info(message);\n            return;\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n          default:\n            return;\n        }\n      }\n    }\n  }\n};\n\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\nexport const loginRequest = {\n  scopes: []\n};\n\n/**\r\n * Se puede utilizar un objeto SilentRequest opcional para lograr un SSO silencioso.\r\n  * entre aplicaciones proporcionando una propiedad \"login_hint\".\r\n */\nexport const silentRequest = {\n  scopes: [\"openid\", \"profile\"],\n  loginHint: \"example@domain.net\"\n};","map":{"version":3,"names":["LogLevel","msalConfig","auth","clientId","authority","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","silentRequest","loginHint"],"sources":["C:/Users/david/Documents/ProyectoReact/src/authConfig.js"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\r\nexport const msalConfig = {\r\n    auth: {\r\n        clientId: '04a3fb00-a972-438a-83c4-cd6c37afaba7', // Este es el ÚNICO campo obligatorio que debe proporcionar.\r\n        authority: 'https://login.microsoftonline.com/davidpatarroyo458gmail.onmicrosoft.com', //El valor predeterminado es \"https://login.microsoftonline.com/common\"\r\n        redirectUri: 'http://localhost:3000', // Apunta a ventana.ubicación.origen. Debe registrar este URI en el portal/registro de aplicaciones de Azure.\r\n        postLogoutRedirectUri: '/', // Indica la página para navegar después de cerrar sesión.\r\n        navigateToLoginRequestUrl: false, // Si es \"verdadero\", regresará a la ubicación de la solicitud original antes de procesar la respuesta del código de autenticación.\r\n    },\r\n    cache: {\r\n        cacheLocation: 'sessionStorage', // Configura la ubicación de la caché. \"sessionStorage\" es más seguro, pero \"localStorage\" le brinda SSO entre pestañas.\r\n        storeAuthStateInCookie: false, //Establezca esto en \"verdadero\" si tiene problemas en IE11 o Edge\r\n    },\r\n    system: {\r\n        loggerOptions: {\r\n            loggerCallback: (level, message, containsPii) => {\r\n                if (containsPii) {\r\n                    return;\r\n                }\r\n                switch (level) {\r\n                    case LogLevel.Error:\r\n                        console.error(message);\r\n                        return;\r\n                    case LogLevel.Info:\r\n                        console.info(message);\r\n                        return;\r\n                    case LogLevel.Verbose:\r\n                        console.debug(message);\r\n                        return;\r\n                    case LogLevel.Warning:\r\n                        console.warn(message);\r\n                        return;\r\n                    default:\r\n                        return;\r\n                }\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n    scopes: []\r\n};\r\n\r\n/**\r\n * Se puede utilizar un objeto SilentRequest opcional para lograr un SSO silencioso.\r\n  * entre aplicaciones proporcionando una propiedad \"login_hint\".\r\n */\r\nexport const silentRequest = {\r\n    scopes: [\"openid\", \"profile\"],\r\n    loginHint: \"example@domain.net\"\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,qBAAqB;;AAE9C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG;EACtBC,IAAI,EAAE;IACFC,QAAQ,EAAE,sCAAsC;IAAE;IAClDC,SAAS,EAAE,0EAA0E;IAAE;IACvFC,WAAW,EAAE,uBAAuB;IAAE;IACtCC,qBAAqB,EAAE,GAAG;IAAE;IAC5BC,yBAAyB,EAAE,KAAK,CAAE;EACtC,CAAC;;EACDC,KAAK,EAAE;IACHC,aAAa,EAAE,gBAAgB;IAAE;IACjCC,sBAAsB,EAAE,KAAK,CAAE;EACnC,CAAC;;EACDC,MAAM,EAAE;IACJC,aAAa,EAAE;MACXC,cAAc,EAAEA,CAACC,KAAK,EAAEC,OAAO,EAAEC,WAAW,KAAK;QAC7C,IAAIA,WAAW,EAAE;UACb;QACJ;QACA,QAAQF,KAAK;UACT,KAAKd,QAAQ,CAACiB,KAAK;YACfC,OAAO,CAACC,KAAK,CAACJ,OAAO,CAAC;YACtB;UACJ,KAAKf,QAAQ,CAACoB,IAAI;YACdF,OAAO,CAACG,IAAI,CAACN,OAAO,CAAC;YACrB;UACJ,KAAKf,QAAQ,CAACsB,OAAO;YACjBJ,OAAO,CAACK,KAAK,CAACR,OAAO,CAAC;YACtB;UACJ,KAAKf,QAAQ,CAACwB,OAAO;YACjBN,OAAO,CAACO,IAAI,CAACV,OAAO,CAAC;YACrB;UACJ;YACI;QAAO;MAEnB;IACJ;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMW,YAAY,GAAG;EACxBC,MAAM,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG;EACzBD,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;EAC7BE,SAAS,EAAE;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}